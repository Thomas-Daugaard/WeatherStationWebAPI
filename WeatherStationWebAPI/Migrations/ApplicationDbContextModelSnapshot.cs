// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherStationWebAPI.Data;

namespace WeatherStationWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherStationWebAPI.Models.Place", b =>
                {
                    b.Property<long>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("WeatherStationWebAPI.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PwHash")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeatherStationWebAPI.Models.WeatherLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AirPressure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PlaceId")
                        .HasColumnType("bigint");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("LogId");

                    b.HasIndex("PlaceId");

                    b.ToTable("WeatherLogs");
                });

            modelBuilder.Entity("WeatherStationWebAPI.Models.Place", b =>
                {
                    b.HasOne("WeatherStationWebAPI.Models.User", null)
                        .WithMany("SignedUpPlaces")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WeatherStationWebAPI.Models.WeatherLog", b =>
                {
                    b.HasOne("WeatherStationWebAPI.Models.Place", "LogPlace")
                        .WithMany()
                        .HasForeignKey("PlaceId");

                    b.Navigation("LogPlace");
                });

            modelBuilder.Entity("WeatherStationWebAPI.Models.User", b =>
                {
                    b.Navigation("SignedUpPlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
